name: 'Setup Homework'
description: 'Setup environment for testing homework'

inputs:
  min_commits:
    description: Minimum number of commits required to earn credit
    type: number
    default: 3
    required: false

outputs:
  homework_name:
    description: 'Name of homework parsed from repository name'
    value: ${{ steps.parse_name.outputs.homework_name }}

  java_path:
    description: 'Path of Java installation'
    value: ${{ steps.setup-java.outputs.path }}

runs:
  using: 'composite'
  steps:
    - name: Parse homework name
      id: parse_name
      shell: bash
      run: |
        echo ""
        echo "Working: $(pwd)"
        echo "Repository: ${GITHUB_REPOSITORY}"

        if [[ ${GITHUB_REPOSITORY} =~ .+\/homework-([^-]+)-.+ ]]; then
          export HOMEWORK_NAME=${BASH_REMATCH[1]}
          echo "Homework Name: ${HOMEWORK_NAME}"
          echo "HOMEWORK_NAME=${HOMEWORK_NAME}" >> $GITHUB_ENV
          echo "homework_name=${HOMEWORK_NAME}" >> $GITHUB_OUTPUT
          exit 0
        fi

        echo "::error ::Repository ${GITHUB_REPOSITORY} in an unexpected format; cannot parse."

    ## homework must be cloned into working directory
    ## otherwise will break github classroom autograder

    - name: Clone homework repository
      uses: actions/checkout@v3

    - name: List homework files and commits
      shell: bash
      run: |
        echo ""
        echo "Listing homework files..."
        find . -not -path '*/.*' -type f

    ## check if repository has minimum number of commits
    ## uses 1 as default if missing

    - name: Check minimum number of commits
      shell: bash
      run: |
        MIN_COMMITS=$((${{ inputs.min_commits }}))
        if [[ ${MIN_COMMITS} -le 0 ]]; then
          MIN_COMMITS=$((1))
        fi

        echo "Min Commits: ${MIN_COMMITS}"
        echo "MIN_COMMITS=${MIN_COMMITS}" >> $GITHUB_ENV

        echo ""
        echo "Listing commits..."
        git fetch --unshallow
        NUM_COMMITS=$(git rev-list --count refs/remotes/origin/main)

        echo "NUM_COMMITS=${NUM_COMMITS}" >> $GITHUB_ENV
        echo "num_commits=${NUM_COMMITS}" >> $GITHUB_OUTPUT
        echo "Found ${NUM_COMMITS} commits; at least ${MIN_COMMITS} commits required."
