name: 'Setup Homework'
description: 'Setup environment for testing homework'

outputs:
  homework_name:
    description: 'Name of homework parsed from repository name'
    value: ${{ steps.parse_name.outputs.homework_name }}

  # found_commits:
  #   description: 'Number of commits found'
  #   value: ${{ steps.check_commits.outputs.path }}

  java_path:
    description: 'Path of Java installation'
    value: ${{ steps.setup_java.outputs.path }}

runs:
  using: 'composite'
  steps:
    # step names in composite actions are not output

    - id: parse_name
      shell: bash
      run: |
        echo ""
        echo "Working: $(pwd)"
        echo "Repository: ${GITHUB_REPOSITORY}"

        if [[ ${GITHUB_REPOSITORY} =~ .+\/homework-([^-]+)-.+ ]]; then
          export HOMEWORK_NAME=${BASH_REMATCH[1]}
          echo "Homework Name: ${HOMEWORK_NAME}"
          echo "HOMEWORK_NAME=${HOMEWORK_NAME}" >> $GITHUB_ENV
          echo "homework_name=${HOMEWORK_NAME}" >> $GITHUB_OUTPUT
          echo ""
          exit 0
        fi

        echo "::error ::Repository ${GITHUB_REPOSITORY} in an unexpected format; cannot parse."

    # clone homework repository
    # must be in working directory for autograder

    - uses: actions/checkout@v3

    - shell: bash
      run: echo ""

    - shell: bash
      run: |
        echo "Listing homework files..."
        find . -not -path '*/.*' -type f
        echo ""

    # TODO: Move to grading step
    # # check number of commits in repository

    # - name: Check number of commits
    #   id: check_commits
    #   shell: bash
    #   run: |
    #     echo "Listing commits..."
    #     git fetch --unshallow
    #     NUM_COMMITS=$(git rev-list --count refs/remotes/origin/main)

    #     echo "NUM_COMMITS=${NUM_COMMITS}" >> $GITHUB_ENV
    #     echo "num_commits=${NUM_COMMITS}" >> $GITHUB_OUTPUT
    #     echo "Found ${NUM_COMMITS} commits."
    #     echo ""

    # get clean test files from template repository

    - shell: bash
      run: |
        TEMPLATE_DIR=$(mktemp -d ~/template-XXXX)
        echo "Temporary Directory: ${TEMPLATE_DIR}"
        echo "TEMPLATE_DIR=${TEMPLATE_DIR}" >> $GITHUB_ENV
        echo ""

    - shell: bash
      run: |
        TEMPLATE_REPO="https://github-actions:${{ github.token }}@github.com/${{ github.repository_owner }}/homework-${HOMEWORK_NAME}-template.git"
        git clone --depth 1 "${TEMPLATE_REPO}" ${TEMPLATE_DIR}/template
        echo ""

    - shell: bash
      run: |
        echo "Listing template files..."
        find ${TEMPLATE_DIR}/template -not -path '*/.*' -type f
        echo ""

    - shell: bash
      run: |
        echo "Moving clean test files..."
        rm -rf src/test
        mv -fv ${TEMPLATE_DIR}/template/src/test src/
        mv -fv ${TEMPLATE_DIR}/template/pom.xml .
        echo ""
        
    - shell: bash
      run: |
        echo "Listing clean test files..."
        find src/test/ -not -path '*/.*' -type f
        echo ""

    # setup java
    # https://github.com/actions/setup-java

    - id: setup_java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'

    - shell: bash
      run: echo ""

    # compile code (ignoring any warnings)

    - shell: bash
      run: |
        echo "Compiling homework..."
        mvn -f pom.xml -ntp --quiet "-Dconfig.xlint=-Xlint:none" "-Dconfig.xdoclint=-Xdoclint:none" "-Dconfig.werror=false" "-Dmaven.compiler.showWarnings=false" clean compile test-compile
        echo ""
