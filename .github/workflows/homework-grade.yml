name: Homework Grade

on:
  workflow_call:
    inputs:
      points:
        required: false
        type: string

      compile_status:
        required: false
        type: string

      javadoc_status:
        required: false
        type: string

      commits_status:
        required: false
        type: string

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  main:
    name: Autograding
    runs-on: ubuntu-latest
    timeout-minutes: 10

    # permissions:
    #   checks: read
    #   actions: read
    #   contents: read

    # outputs:
      # homework_name: ${{ steps.homework_setup.outputs.homework_name }}

      # points: ${{ steps.autograder.outputs.points }}
      # autograder: ${{ steps.autograder.outcome }}

      # compile_status: ${{ steps.check_compile.outcome }}
      # javadoc_status: ${{ steps.check_javadoc.outcome }}
      # commits_status: ${{ steps.check_commits.outcome }}

    steps:
      - name: Hello
        shell: bash
        env:
          POINTS: ${{ inputs.points }}
        run: |
          echo "Hello world ${POINTS}"

      - name: Output grade after late and other deductions
        uses: actions/github-script@v6
        env:
          POINTS: ${{ inputs.points }}
        with:
          script: |
            const workflow_run = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });

            const suite_url = workflow_run.data.check_suite_url;
            const suite_id = parseInt(suite_url.match(/[0-9]+$/)[0], 10);
            
            const check_runs = await github.rest.checks.listForSuite({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_name: 'Autograding',
              check_suite_id: suite_id,
            });
          
            let text = process.env.POINTS;
            text = 'Points 10/5';
            
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: check_runs.data.check_runs[0].id,
              output: {
                title: 'Autograding',
                summary: text,
                text: text,
                annotations: [
                  {
                    path: '.github',
                    start_line: 1,
                    end_line: 1,
                    annotation_level: 'notice',
                    message: text,
                    title: 'Autograding complete',
                  },
                ],
              },
            });

  # core.notice(`Earned ${starting_points} from tests`, {'title': `+${starting_points} Points`})



  #     # trick github classroom by creating an annotation just right
  #     # https://github.com/education/autograding/blob/master/src/output.ts

  #     - name: Output grade after late and other deductions
  #       uses: actions/github-script@v6
  #       env:
  #         POINTS: '${{ needs.test.outputs.points }}'
  #       with:
  #         script: |
  #           const workflow_run = await github.rest.actions.getWorkflowRun({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             run_id: context.runId
  #           });

  #           const suite_url = workflow_run.data.check_suite_url;
  #           const suite_id = parseInt(suite_url.match(/[0-9]+$/)[0], 10);
            
  #           const check_runs = await github.rest.checks.listForSuite({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             check_name: 'Autograding',
  #             check_suite_id: suite_id,
  #           });
          
  #           let text = process.env.POINTS;
  #           text = 'Points 10/5';
            
  #           await github.rest.checks.update({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             check_run_id: check_runs.data.check_runs[0].id,
  #             output: {
  #               title: 'Autograding',
  #               summary: text,
  #               text: text,
  #               annotations: [
  #                 {
  #                   path: '.github',
  #                   start_line: 1,
  #                   end_line: 1,
  #                   annotation_level: 'notice',
  #                   message: text,
  #                   title: 'Autograding complete',
  #                 },
  #               ],
  #             },
  #           });
