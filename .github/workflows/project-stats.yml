name: 'Project Stats'

on:
  workflow_call:

jobs:
  main:
    name: 'Main'
    runs-on: ubuntu-latest

    steps:
      - name: 'Listing issues'
        uses: actions/github-script@v6
        with:
          script: |
            const config = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
              per_page: 100
            };

            const [grade_tests, grade_design] = await Promise.all([
              github.rest.issues.listForRepo({
                ...config,
                labels: 'grade-tests'
              }),
              github.rest.issues.listForRepo({
                ...config,
                labels: 'grade-design'
              })
            ]);

            core.info(`Found ${grade_tests?.data?.length} project test issues.`);
            core.info(`Found ${grade_design?.data?.length} project design issues.`);

            const releases = {};

            responses: for (const response of [grade_tests, grade_design]) {
              issues: for (const issue of response.data) {
                let project = undefined;
                let type = undefined;
                let release = undefined;

                labels: for (const label of issue.labels) {
                  switch (label.name) {
                    case 'error':
                      core.info(`Skipping issue #${issue.number} due to "error" label.`);
                      continue issues;

                    case 'project1': case 'project2': 
                    case 'project3': case 'project4':
                    case 'project5':
                      project = label.name;
                      break;
                  
                    case 'grade-tests': case 'grade-design':
                      type = label.name;
                      break;
                    
                    default:
                      if (label.name.startsWith('v')) {
                        release = label.name;
                      }
                      break;
                  }
                }

                core.info(`Issue ${issue.number} project ${project} type ${type
                } release ${release}`);
              }
            }

      # - name: 'Install cloc'
      #   run: |
      #     sudo apt install cloc
      #     cloc --version

      # compare project 1.1 test to 1.x design
      # compare 2.1 test to 2.x design
      # compare 3.1 test to 3.x design

      # compare 1.x design to current version of code